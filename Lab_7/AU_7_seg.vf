////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : AU_7_seg.vf
// /___/   /\     Timestamp : 11/23/2016 11:42:40
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog "C:/Vahe/150648N Semi_2/Computer Architecture/Practicals/Lab7/AU_7_seg.vf" -w "C:/Vahe/150648N Semi_2/Computer Architecture/Practicals/Lab7/AU_7_seg.sch"
//Design Name: AU_7_seg
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module LUT_MUSER_AU_7_seg(A0, 
                          A1, 
                          A2, 
                          A3, 
                          A, 
                          B, 
                          C, 
                          D, 
                          E, 
                          F, 
                          G);

    input A0;
    input A1;
    input A2;
    input A3;
   output A;
   output B;
   output C;
   output D;
   output E;
   output F;
   output G;
   
   
   ROM16X1 #( .INIT(16'h2812) ) XLXI_1 (.A0(A0), 
                   .A1(A1), 
                   .A2(A2), 
                   .A3(A3), 
                   .O(A));
   ROM16X1 #( .INIT(16'hD860) ) XLXI_2 (.A0(A0), 
                   .A1(A1), 
                   .A2(A2), 
                   .A3(A3), 
                   .O(B));
   ROM16X1 #( .INIT(16'hD004) ) XLXI_3 (.A0(A0), 
                   .A1(A1), 
                   .A2(A2), 
                   .A3(A3), 
                   .O(C));
   ROM16X1 #( .INIT(16'h8492) ) XLXI_4 (.A0(A0), 
                   .A1(A1), 
                   .A2(A2), 
                   .A3(A3), 
                   .O(D));
   ROM16X1 #( .INIT(16'h02BA) ) XLXI_5 (.A0(A0), 
                   .A1(A1), 
                   .A2(A2), 
                   .A3(A3), 
                   .O(E));
   ROM16X1 #( .INIT(16'h208E) ) XLXI_6 (.A0(A0), 
                   .A1(A1), 
                   .A2(A2), 
                   .A3(A3), 
                   .O(F));
   ROM16X1 #( .INIT(16'h1083) ) XLXI_7 (.A0(A0), 
                   .A1(A1), 
                   .A2(A2), 
                   .A3(A3), 
                   .O(G));
endmodule
`timescale 1ns / 1ps

module HA_MUSER_AU_7_seg(A, 
                         B, 
                         C, 
                         S);

    input A;
    input B;
   output C;
   output S;
   
   
   XOR2  XLXI_1 (.I0(B), 
                .I1(A), 
                .O(S));
   AND2  XLXI_2 (.I0(B), 
                .I1(A), 
                .O(C));
endmodule
`timescale 1ns / 1ps

module FA_MUSER_AU_7_seg(A, 
                         B, 
                         C_in, 
                         C_out, 
                         S);

    input A;
    input B;
    input C_in;
   output C_out;
   output S;
   
   wire XLXN_1;
   wire XLXN_7;
   wire XLXN_9;
   
   HA_MUSER_AU_7_seg  XLXI_1 (.A(A), 
                             .B(B), 
                             .C(XLXN_9), 
                             .S(XLXN_1));
   HA_MUSER_AU_7_seg  XLXI_2 (.A(XLXN_1), 
                             .B(C_in), 
                             .C(XLXN_7), 
                             .S(S));
   OR2  XLXI_3 (.I0(XLXN_9), 
               .I1(XLXN_7), 
               .O(C_out));
endmodule
`timescale 1ns / 1ps

module RCA_MUSER_AU_7_seg(A0, 
                          A1, 
                          A2, 
                          A3, 
                          B0, 
                          B1, 
                          B2, 
                          B3, 
                          C_out, 
                          S0, 
                          S1, 
                          S2, 
                          S3, 
                          Z_out);

    input A0;
    input A1;
    input A2;
    input A3;
    input B0;
    input B1;
    input B2;
    input B3;
   output C_out;
   output S0;
   output S1;
   output S2;
   output S3;
   output Z_out;
   
   wire XLXN_5;
   wire XLXN_7;
   wire XLXN_11;
   wire XLXN_27;
   wire C_out_DUMMY;
   wire S0_DUMMY;
   wire S1_DUMMY;
   wire S2_DUMMY;
   wire S3_DUMMY;
   
   assign C_out = C_out_DUMMY;
   assign S0 = S0_DUMMY;
   assign S1 = S1_DUMMY;
   assign S2 = S2_DUMMY;
   assign S3 = S3_DUMMY;
   FA_MUSER_AU_7_seg  XLXI_1 (.A(A0), 
                             .B(B0), 
                             .C_in(XLXN_27), 
                             .C_out(XLXN_5), 
                             .S(S0_DUMMY));
   FA_MUSER_AU_7_seg  XLXI_2 (.A(A1), 
                             .B(B1), 
                             .C_in(XLXN_5), 
                             .C_out(XLXN_7), 
                             .S(S1_DUMMY));
   FA_MUSER_AU_7_seg  XLXI_3 (.A(A2), 
                             .B(B2), 
                             .C_in(XLXN_7), 
                             .C_out(XLXN_11), 
                             .S(S2_DUMMY));
   FA_MUSER_AU_7_seg  XLXI_4 (.A(A3), 
                             .B(B3), 
                             .C_in(XLXN_11), 
                             .C_out(C_out_DUMMY), 
                             .S(S3_DUMMY));
   GND  XLXI_5 (.G(XLXN_27));
   NOR5  XLXI_7 (.I0(C_out_DUMMY), 
                .I1(S3_DUMMY), 
                .I2(S2_DUMMY), 
                .I3(S1_DUMMY), 
                .I4(S0_DUMMY), 
                .O(Z_out));
endmodule
`timescale 1ns / 1ps

module Register_4_bit_MUSER_AU_7_seg(CLOCK, 
                                     EN, 
                                     IN0, 
                                     IN1, 
                                     IN2, 
                                     IN3, 
                                     S0, 
                                     S1, 
                                     S2, 
                                     S3);

    input CLOCK;
    input EN;
    input IN0;
    input IN1;
    input IN2;
    input IN3;
   output S0;
   output S1;
   output S2;
   output S3;
   
   wire CLK;
   
   FD #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
              .D(IN0), 
              .Q(S0));
   FD #( .INIT(1'b0) ) XLXI_2 (.C(CLK), 
              .D(IN1), 
              .Q(S1));
   FD #( .INIT(1'b0) ) XLXI_3 (.C(CLK), 
              .D(IN2), 
              .Q(S2));
   FD #( .INIT(1'b0) ) XLXI_4 (.C(CLK), 
              .D(IN3), 
              .Q(S3));
   AND2  XLXI_5 (.I0(EN), 
                .I1(CLOCK), 
                .O(CLK));
endmodule
`timescale 1ns / 1ps

module AU_MUSER_AU_7_seg(CLOCK, 
                         EN, 
                         IN0, 
                         IN1, 
                         IN2, 
                         IN3, 
                         C_out, 
                         S0, 
                         S1, 
                         S2, 
                         S3, 
                         Z_out);

    input CLOCK;
    input EN;
    input IN0;
    input IN1;
    input IN2;
    input IN3;
   output C_out;
   output S0;
   output S1;
   output S2;
   output S3;
   output Z_out;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_23;
   
   Register_4_bit_MUSER_AU_7_seg  XLXI_1 (.CLOCK(CLOCK), 
                                         .EN(EN), 
                                         .IN0(IN0), 
                                         .IN1(IN1), 
                                         .IN2(IN2), 
                                         .IN3(IN3), 
                                         .S0(XLXN_1), 
                                         .S1(XLXN_2), 
                                         .S2(XLXN_3), 
                                         .S3(XLXN_4));
   Register_4_bit_MUSER_AU_7_seg  XLXI_2 (.CLOCK(CLOCK), 
                                         .EN(XLXN_23), 
                                         .IN0(IN0), 
                                         .IN1(IN1), 
                                         .IN2(IN2), 
                                         .IN3(IN3), 
                                         .S0(XLXN_8), 
                                         .S1(XLXN_7), 
                                         .S2(XLXN_6), 
                                         .S3(XLXN_5));
   RCA_MUSER_AU_7_seg  XLXI_3 (.A0(XLXN_1), 
                              .A1(XLXN_2), 
                              .A2(XLXN_3), 
                              .A3(XLXN_4), 
                              .B0(XLXN_8), 
                              .B1(XLXN_7), 
                              .B2(XLXN_6), 
                              .B3(XLXN_5), 
                              .C_out(C_out), 
                              .S0(S0), 
                              .S1(S1), 
                              .S2(S2), 
                              .S3(S3), 
                              .Z_out(Z_out));
   INV  XLXI_4 (.I(EN), 
               .O(XLXN_23));
endmodule
`timescale 1ns / 1ps

module AU_7_seg(Clock, 
                RegSel, 
                X0, 
                X1, 
                X2, 
                X3, 
                A, 
                an0, 
                an1, 
                an2, 
                an3, 
                B, 
                C, 
                C_out, 
                D, 
                E, 
                F, 
                G, 
                Z);

    input Clock;
    input RegSel;
    input X0;
    input X1;
    input X2;
    input X3;
   output A;
   output an0;
   output an1;
   output an2;
   output an3;
   output B;
   output C;
   output C_out;
   output D;
   output E;
   output F;
   output G;
   output Z;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_5;
   wire an3_DUMMY;
   
   assign an3 = an3_DUMMY;
   AU_MUSER_AU_7_seg  XLXI_1 (.CLOCK(Clock), 
                             .EN(RegSel), 
                             .IN0(X0), 
                             .IN1(X1), 
                             .IN2(X2), 
                             .IN3(X3), 
                             .C_out(C_out), 
                             .S0(XLXN_5), 
                             .S1(XLXN_4), 
                             .S2(XLXN_2), 
                             .S3(XLXN_1), 
                             .Z_out(Z));
   LUT_MUSER_AU_7_seg  XLXI_2 (.A0(XLXN_5), 
                              .A1(XLXN_4), 
                              .A2(XLXN_2), 
                              .A3(XLXN_1), 
                              .A(A), 
                              .B(B), 
                              .C(C), 
                              .D(D), 
                              .E(E), 
                              .F(F), 
                              .G(G));
   INV  XLXI_3 (.I(an3_DUMMY), 
               .O(an0));
   INV  XLXI_5 (.I(an3_DUMMY), 
               .O(an1));
   INV  XLXI_6 (.I(an3_DUMMY), 
               .O(an2));
   GND  XLXI_8 (.G(an3_DUMMY));
endmodule
